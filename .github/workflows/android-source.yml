on:
  push:
  workflow_dispatch:  # Permite execução manual

jobs:
  android-source:
    runs-on: ubuntu-22.04
    env:
      LOVE_ANDROID_BRANCH: "11.4"
      LOVE_BRANCH: ''
      EXPERIMENT_NEW_PACKAGING: 1
    steps:
    - name: Create Directories
      run: mkdir bin
    - name: Add bin to PATH
      run: realpath bin >> $GITHUB_PATH
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '>=3.10'
    - name: Setup Java 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
    - name: Setup cURL & 7-zip
      run: sudo apt-get install curl p7zip-full
    - name: Download ImageMagick 7
      run: curl -Lfo bin/magick https://github.com/ImageMagick/ImageMagick/releases/download/7.1.0-4/ImageMagick-5369493-gcc-x86_64.AppImage && chmod u+x bin/magick
    - name: Install JSMin (Python Package)
      run: python -m pip install jsmin
    - name: Checkout LÖVE Android
      uses: actions/checkout@v4
      with:
        repository: love2d/love-android
        ref: ${{ env.LOVE_ANDROID_BRANCH }}
        path: love-android
        submodules: ${{ env.LOVE_BRANCH == ''}}
    - name: Checkout LÖVE
      uses: actions/checkout@v4
      if: ${{ env.LOVE_BRANCH != ''}}
      with:
        path: love-android/love/src/jni/love
        ref: ${{ env.LOVE_BRANCH }}
    - name: Set $LOVEANDROID
      run: echo "LOVEANDROID=$(realpath love-android)" >> $GITHUB_ENV
    - name: Checkout
      uses: actions/checkout@v4
      with:
        path: game
        submodules: recursive
    - name: Prepare Metadata
      id: md
      run: |
        cd game
        python scripts/prepare_android.py --get-icon-path --commit >> $GITHUB_OUTPUT
      env:
        GITHUB_OUTPUT: $GITHUB_OUTPUT
    - name: Zip Game & Copy to assets
      if: ${{ env.EXPERIMENT_NEW_PACKAGING == 0 }}
      run: |
        set -e
        cd game/game
        mkdir -p $LOVEANDROID/app/src/embed/assets
        7z -tzip a $LOVEANDROID/app/src/embed/assets/game.love *
    - name: Copy Files into Assets
      if: ${{ env.EXPERIMENT_NEW_PACKAGING == 1 }}
      run: cp -r game/game/. $LOVEANDROID/app/src/embed/assets
    - name: Change Icon
      if: ${{ fromJson(steps.md.outputs.icon) != '' }}
      env:
        ICONFILE: game/${{ fromJson(steps.md.outputs.icon) }}
      run: |
        set -e
        mkdir -p $LOVEANDROID/app/src/embed/res/drawable-{m,h,xh,xxh,xxxh}dpi
        magick convert "$ICONFILE" -resize 192x192 -gravity center -background transparent -extent 192x192 -depth 8 $LOVEANDROID/app/src/embed/res/drawable-xxxhdpi/love.png
        magick convert "$ICONFILE" -resize 144x144 -gravity center -background transparent -extent 144x144 -depth 8 $LOVEANDROID/app/src/embed/res/drawable-xxhdpi/love.png
        magick convert "$ICONFILE" -resize 96x96 -gravity center -background transparent -extent 96x96 -depth 8 $LOVEANDROID/app/src/embed/res/drawable-xhdpi/love.png
        magick convert "$ICONFILE" -resize 72x72 -gravity center -background transparent -extent 72x72 -depth 8 $LOVEANDROID/app/src/embed/res/drawable-hdpi/love.png
        magick convert "$ICONFILE" -resize 48x48 -gravity center -background transparent -extent 48x48 -depth 8 $LOVEANDROID/app/src/embed/res/drawable-mdpi/love.png
    - name: Build
      env:
        BUILD_APK: ${{ fromJson(steps.md.outputs.apk) }}
        BUILD_AAB: ${{ fromJson(steps.md.outputs.aab) }}
      run: cd love-android && gradle $BUILD_APK $BUILD_AAB
    - name: Artifact (Bundle)
      uses: actions/upload-artifact@v4
      with:
        name: android-source-bundle
        path: ${{ fromJson(steps.md.outputs.aabpath) }}
    - name: Artifact (Debug APK)
      uses: actions/upload-artifact@v4
      with:
        name: android-source-apk
        path: ${{ fromJson(steps.md.outputs.apkpath) }}
